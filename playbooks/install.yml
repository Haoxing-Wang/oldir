---
- name: Ensure yum presence
  hosts: openstack_nodes
  gather_facts: no
  sudo: yes
  tasks:
    - shell: python -c 'import yum' || (dnf install -y yum yum-utils && ln -snf /usr/bin/yum-deprecated /usr/bin/yum)

- name: Setup Firewall Rules
  hosts: openstack_nodes:!tester
  sudo: yes
  tasks:
    - name: Iptables - Reset Rules To Default Drop
      command: "iptables {{ item }}"
      with_items: installer.firewall.rules

- name: Load config for component testing
  hosts: openstack_nodes
  sudo: yes
  tasks:
      - name: Load component config
        include_vars: "{{ component.dir + '/jenkins-config.yml' }}"
        register: component_config
        #TODO(mpavlase): need to think of a better way (unittest condition)
        when: tester.component is defined and tester.name == 'unittest'

      - name: Print config
        debug: var=component_config
        #TODO(mpavlase): need to think of a better way (unittest condition)
        when: tester.component is defined and tester.name == 'unittest'

- include: installer/{{ installer.type }}/main.yml

- name: Global post install
  hosts: controller
  gather_facts: yes
  tasks:
        # TODO(tkammer): move all params into khaleesi-settings
      - name: Create external network - neutron
        quantum_network:
            state: present
            auth_url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:35357/v2.0/"
            login_username: admin
            login_password: "{{ hostvars[inventory_hostname].admin_password | default('redhat') }}"
            login_tenant_name: admin
            name: "{{ installer.network.name }}"
            provider_network_type: flat
            provider_physical_network: "{{ installer.network.label }}"
            router_external: yes
            shared: no
            admin_state_up: yes
        when: installer is defined and installer.network.type == 'neutron'

      - name: Create subnet for external network - neutron
        quantum_subnet:
            state: present
            auth_url: "http://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:35357/v2.0/"
            login_username: admin
            login_password: "{{ hostvars[inventory_hostname].admin_password | default('redhat') }}"
            login_tenant_name: admin
            tenant_name: admin
            network_name: "{{ installer.network.name }}"
            name: external-subnet
            enable_dhcp: False
            gateway_ip: "{{ provisioner.network.network_list.external.subnet_gateway }}"
            cidr: "{{ provisioner.network.network_list.external.subnet_cidr}}"
            allocation_pool_start: "{{ provisioner.network.network_list.external.allocation_start }}"
            allocation_pool_end: "{{ provisioner.network.network_list.external.allocation_end }}"
        when: installer is defined and installer.network.type == 'neutron'
