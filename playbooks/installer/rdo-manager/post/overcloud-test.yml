---
- name: Group hosts by post action - tempest
  hosts: undercloud
  gather_facts: no
  tasks:
    - group_by: key="tempest"
      when: "installer.post_action is defined and 'tempest' in installer.post_action"

- name: Execute tempest
  hosts: tempest
  tasks:
    - name: set fact stack user home
      set_fact: instack_user_home=/home/{{ provisioner.remote_user }}

    - name: rename SwiftOperator and add network_id BZ 1243825 - BZ 1243828
      sudo: yes
      replace:
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
        dest: /usr/lib/python2.7/site-packages/rdomanager_oscplugin/v1/overcloud_validate.py
      with_items:
        - { regexp: "SwiftOperator" , replace: "swiftoperator" }
        - { regexp: "tempest.conf" , replace: "tempest.conf --network-id {{ public_network_uuid }} " }
      tags: workaround
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: change cirros user to fedora
      sudo: yes
      replace:
        regexp: cirros
        replace: fedora
        dest: /usr/lib/python2.7/site-packages/rdomanager_oscplugin/v1/overcloud_validate.py
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex == "tempest\.scenario\.test_minimum_basic" and
            product.name == "rhos"

    - name: add config into overcloud_validate.py for Fedora image
      sudo: yes
      lineinfile: dest=/usr/lib/python2.7/site-packages/rdomanager_oscplugin/v1/overcloud_validate.py
                  regexp="--create \'"
                  insertafter="--create \'"
                  line="                        \'--debug --create --image /home/stack/fedora-user.qcow2 compute.flavor_ref 2 compute.flavor_ref_alt 2 \'"
                  backup=yes
                  backrefs=yes
                  state=present
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex == "tempest\.scenario\.test_minimum_basic" and
            product.name == "rhos"

    - name: copy skipfile into stack home
      copy: src=files/skipfile dest={{ instack_user_home }}/skipfile owner=stack group=stack
      when: installer.tempest.enabled is defined and
            installer.tempest.enabled|bool

    - name: run tempest based overcloud tests
      ignore_errors: yes
      when: installer.tempest.enabled is defined and
            installer.tempest.enabled|bool
      shell: >
          source {{ instack_user_home }}/overcloudrc;
          openstack overcloud validate --overcloud-auth-url $OS_AUTH_URL \
          --overcloud-admin-password "$OS_PASSWORD" \
          --tempest-args {{ installer.tempest.test_regex }} \
          --skipfile {{ instack_user_home }}/skipfile &> {{ instack_user_home }}/tempest_console.log

    - name: run overcloud tests on rdo
      ignore_errors: yes
      when: overcloud_deployment_result == "0" and
            installer.tempest.enabled is defined and
            installer.tempest.enabled|bool and
            product.name == "rdo"
      shell: >
          source {{ instack_user_home }}/overcloudrc;
          openstack overcloud validate --overcloud-auth-url $OS_AUTH_URL \
          --overcloud-admin-password "$OS_PASSWORD" \
          --tempest-args {{ installer.tempest.test_regex }} \
          --network-id {{ public_network_uuid }} \
          --skipfile {{ instack_user_home }}/skipfile &> {{ instack_user_home }}/tempest_console.log

    - name: check test_minimum_basic output
      ignore_errors: yes
      shell: "[ `grep \"Passed\" tempest_console.log | cut -d \":\" -f2` -eq 1 ]"
      register: tempest_console_log_passed_grep
      when: installer.tempest.test_regex is defined and
            installer.tempest.test_regex == "tempest\.scenario\.test_minimum_basic" and
            product.name == "rhos"

    - name: fail when tempest comsole log does not show 1 passed test returned
      fail: msg="tempest.scenario.test_minimum_basic did not return 1 passsed test."
      when: tempest_console_log_passed_grep is defined and
            tempest_console_log_passed_grep.rc != 0

    - name: fetch tempest result
      fetch: src={{ installer.tempest.dir }}/tempest.xml dest={{ lookup('env', 'PWD') }}/nosetests.xml flat=yes
      when: installer.tempest.enabled is defined and
            product.name != "rdo" or installer.tempest.enabled|bool
