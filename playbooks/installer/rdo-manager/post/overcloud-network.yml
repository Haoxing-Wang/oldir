---
- name: Group hosts by post action - create neutron networks for overcloud
  hosts: all:!localhost
  gather_facts: no
  tasks:
    - group_by: key="setup_network"
      when: "installer.post_action is defined and 'setup_network' in installer.post_action"

- name: configure neutron
  hosts: undercloud:&setup_network
  tasks:
    - name: set fact stack user home
      set_fact: instack_user_home=/home/{{ provisioner.remote_user }}

    - name: get admin password
      register: get_admin_password_result
      shell: >
            grep 'OS_PASSWORD' {{ instack_user_home }}/overcloudrc | cut -d '=' -f2

    - name: get auth url
      register: get_auth_url_result
      shell: >
            grep 'OS_AUTH_URL' {{ instack_user_home }}/overcloudrc | cut -d '=' -f2

    - name: setup neutron network for floating ips
      register: public_network_uuid_result
      quantum_network:
          state: present
          auth_url: "{{ get_auth_url_result.stdout }}"
          login_username: admin
          login_password: "{{ get_admin_password_result.stdout }}"
          login_tenant_name: admin
          name: "{{ installer.network.name }}"
          provider_network_type: "{{ hw_env.network_type }}"
          provider_physical_network: "{{ hw_env.physical_network }}"
          provider_segmentation_id: "{{ hw_env.ExternalNetworkVlanID }}"
          router_external: yes
          shared: no

    - name: Create subnet for external network net-iso
      quantum_subnet:
          state: present
          auth_url: "{{ get_auth_url_result.stdout }}"
          login_username: admin
          login_password: "{{ get_admin_password_result.stdout }}"
          login_tenant_name: admin
          network_name: "{{ installer.network.name }}"
          name: "{{ installer.network.name }}"
          enable_dhcp: False
          gateway_ip: "{{ hw_env.network_gateway }}"
          cidr: "{{ hw_env.floating_ip_cidr }}"
          allocation_pool_start: "{{ hw_env.floating_ip_start }}"
          allocation_pool_end: "{{ hw_env.floating_ip_end }}"

    - name: set fact for public network uuid
      set_fact:
        public_network_uuid: "{{ public_network_uuid_result.id }}"

    - name: add keystone role heat_stack_owner
      keystone_user:
          role: heat_stack_owner
          user: admin
          tenant: admin
          login_user: admin
          login_password: "{{ get_admin_password_result.stdout }}"
          login_tenant_name: admin
          endpoint: "{{ get_auth_url_result.stdout }}"
          state: present
