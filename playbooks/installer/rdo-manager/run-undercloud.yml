---
- name: install the undercloud packages and get the guest image
  hosts: undercloud
  tasks:
    - name: get the guest-image
      get_url: >
        url="{{ distro.images[distro.name][distro.version].remote_file_server }}{{ distro.images[distro.name][distro.version].guest_image_name }}"
        dest=/home/stack/{{ distro.images[distro.name][distro.version].guest_image_name }}

    - name: install python-rdomanager-oscplugin
      yum: name=python-rdomanager-oscplugin state=present
      sudo: yes

- name: Customize the answer file for baremetal deployment
  hosts: undercloud:&baremetal
  tasks:
    - name: check if answers file exists
      stat: path="/usr/share/instack-undercloud/instack.answers.sample"
      register: answers_file_present

    - name: check if conf file exists
      stat: path="/usr/share/instack-undercloud/undercloud.conf.sample"
      register: conf_file_present

    - name: fail if there is no answers file and no conf file
      fail: msg="Neither a conf file nor an answers file exists"
      when: answers_file_present.stat.exists == False and conf_file_present.stat.exists == False

    - name: copy baremetal answers file
      shell: cp /usr/share/instack-undercloud/instack.answers.sample {{ instack_user_home }}/instack.answers
      when: answers_file_present.stat.exists == True

    - name: edit instack.answers file - local_interface
      lineinfile: dest={{ instack_user_home }}/instack.answers regexp=^LOCAL_INTERFACE line=LOCAL_INTERFACE={{ hw_env.answers_local_interface }}
      when: answers_file_present.stat.exists == True

    - name: edit instack.answers file - network
      replace: dest={{ instack_user_home }}/instack.answers regexp='192.0.2' replace={{ hw_env.network }}
      when: hw_env.network is defined and answers_file_present.stat.exists == True

    - name: edit instack.answers file - network gateway
      lineinfile: dest={{ instack_user_home }}/instack.answers regexp=^NETWORK_GATEWAY line=NETWORK_GATEWAY={{ hw_env.network_gateway }}
      when: answers_file_present.stat.exists == True

    - name: copy baremetal conf file
      shell: cp /usr/share/instack-undercloud/undercloud.conf.sample {{ instack_user_home }}/undercloud.conf
      when: conf_file_present.stat.exists == True

    - name: edit undercloud.conf file - local_interface
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#local_interface line=local_interface={{ hw_env.answers_local_interface }}
      when: conf_file_present.stat.exists == True

    - name: edit undercloud.conf file - network
      shell: >
        sed -i 's/192.0.2/{{ hw_env.network }}/g' {{ instack_user_home }}/undercloud.conf;
        sed -i '/{{ hw_env.network }}/s/#//g' {{ instack_user_home }}/undercloud.conf
      when: hw_env.network is defined and conf_file_present.stat.exists == True

    - name: register short hostname
      shell: "hostname -s"
      register: short_hostname

    - name: register full hostname
      shell: "hostname --fqdn"
      register: full_hostname

    - name: Set /etc/hostname for those that need it
      lineinfile: >
        dest=/etc/hosts
        line="127.0.1.1 {{ short_hostname.stdout }} {{ full_hostname.stdout }}"
      sudo: yes

    - name: copy instackenv.json to nodes.json
      shell: cp {{ instack_user_home }}/instackenv.json {{ instack_user_home }}/nodes.json

    - name: installing python-six (workaround)
      yum: name=python-six state=present
      sudo: yes

- name: install the undercloud
  hosts: undercloud
  tasks:
    - name: update hosts file for localhost.localhost (workaround for puppet, discovered on centos7)
      lineinfile: dest=/etc/hosts line="127.0.0.1   localhost localhost.localhost"
      sudo: yes

    - name: install the undercloud
      shell: openstack undercloud install --debug &> {{ instack_user_home }}/undercloud_install_initial_install.log

    - name: increase stack_action_timeout to 4 hours (workaround for bz 1243365)
      command: openstack-config --set /etc/heat/heat.conf DEFAULT stack_action_timeout 14400
      sudo: yes
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: restart openstack-heat-engine (workaround for bz 1243365)
      command: systemctl restart openstack-heat-engine
      sudo: yes
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: check if haproxy is present (workaround bug bz 1246525)
      stat: path=/etc/haproxy/haproxy.cfg
      register: ha_config_file

    - name: disable haproxy check (workaround bug bz 1246525)
      sudo: yes
      replace: dest=/etc/haproxy/haproxy.cfg regexp='(listen ironic\n.*\n.*)\n.*option httpchk GET \/' replace='\1'
      when: workarounds.enabled is defined and workarounds.enabled|bool and ha_config_file.stat.exists

    - name: restart haproxy service (workaround bug bz 1246525)
      command: systemctl restart haproxy
      sudo: yes
      when: workarounds.enabled is defined and workarounds.enabled|bool and ha_config_file.stat.exists

    - name: copy files to home
      sudo: yes
      command: cp /root/{{ item }} {{ instack_user_home }}/{{ item }}
      with_items:
        - tripleo-undercloud-passwords
        - stackrc

    - name: chown files for stack user
      sudo: yes
      command: chown stack:stack {{ instack_user_home }}/{{ item }}
      with_items:
        - tripleo-undercloud-passwords
        - stackrc

- name: Execute vendor-specific setup for baremetal environment
  hosts: undercloud:&baremetal
  tasks:
    - name: copy vendor-specific setup file
      synchronize: >
        src={{base_dir}}/khaleesi-settings/hardware_environments/{{hw_env.env_type}}/vendor_specific_setup dest={{ instack_user_home }}/vendor_specific_setup
        delegate_to: local

    - name: execute vendor-specific setup
      shell: >
        chmod 755 {{ instack_user_home }}/vendor_specific_setup;
        {{ instack_user_home }}/vendor_specific_setup

- name: confirm installing the undercloud is idempotent
  hosts: undercloud
  tasks:
    - name: install the undercloud
      shell: openstack undercloud install &> {{ instack_user_home }}/undercloud_install_idempotent_check.log

    - name: check if haproxy is present (workaround bug bz 1246525)
      stat: path=/etc/haproxy/haproxy.cfg
      register: ha_config_file

    - name: disable haproxy check (workaround bug bz 1246525)
      sudo: yes
      replace: dest=/etc/haproxy/haproxy.cfg regexp='(listen ironic\n.*\n.*)\n.*option httpchk GET \/' replace='\1'
      when: workarounds.enabled is defined and workarounds.enabled|bool and ha_config_file.stat.exists

    - name: restart haproxy service (workaround bug bz 1246525)
      command: systemctl restart haproxy
      sudo: yes
      when: workarounds.enabled is defined and workarounds.enabled|bool and ha_config_file.stat.exists

- name: Set ironic to control the power state
  hosts: undercloud:&baremetal
  tasks:
    - name: get power state from /etc/ironic/ironic.conf (workaround for bz 1246641)
      sudo: yes
      shell: >
        sudo cat /etc/ironic/ironic.conf | grep 'force_power_state_during_sync=False'
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: allow ironic to control the power state (workaround for bz 1246641)
      sudo: yes
      shell: >
        sed -i 's/force_power_state_during_sync=False/force_power_state_during_sync=True/g' /etc/ironic/ironic.conf
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: get power state from /etc/ironic/ironic.conf (workaround for bz 1246641)
      sudo: yes
      shell: >
        sudo cat /etc/ironic/ironic.conf | grep 'force_power_state_during_sync=True'
      when: workarounds.enabled is defined and workarounds.enabled|bool

    - name: restart openstack-ironic-conductor (workaround for bz 1246641)
      sudo: yes
      shell: >
        systemctl restart openstack-ironic-conductor
      when: workarounds.enabled is defined and workarounds.enabled|bool

