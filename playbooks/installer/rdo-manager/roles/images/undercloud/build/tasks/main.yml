---
- name: set fact stack user home
  set_fact: instack_user_home=/home/{{ provisioner.remote_user }}

- name: get the guest-image
  sudo: yes
  get_url: >
    url="{{ distro.images[distro.name][distro.full_version].remote_file_server }}{{ distro.images[distro.name][distro.full_version].guest_image_name }}"
    dest=/root/{{ distro.images[distro.name][distro.full_version].guest_image_name }}

- name: copy the guest-image in stack user home
  sudo: yes
  command: cp /root/{{ distro.images[distro.name][distro.full_version].guest_image_name }} {{instack_user_home}}/{{ distro.images[distro.name][distro.full_version].guest_image_name }}

- name: set the right permissions for the guest-image
  sudo: yes
  file: >
    path={{instack_user_home}}/{{ distro.images[distro.name][distro.full_version].guest_image_name }}
    owner={{ provisioner.remote_user }}
    group={{ provisioner.remote_user }}

- name: install yum-plugin-priorities rdo-manager
  yum: name={{item}} state=present
  sudo: yes
  with_items:
    - yum-plugin-priorities
  when: product.name == "rdo"

- name: install rdo-manager-deps
  yum: name={{item}} state=present
  sudo: yes
  with_items:
    - python-tripleoclient
  when: product.name == "rdo" or product.full_version == "8-director"

- name: install python-rdomanager-oscplugin
  yum: name=python-rdomanager-oscplugin state=present
  sudo: yes

- name: Patch instack-virt-setup to ensure dhcp.leases is not used to determine ip (workaround https://review.openstack.org/#/c/232584)
  sudo: yes
  lineinfile:
    dest=/usr/bin/instack-virt-setup
    regexp="/var/lib/libvirt/dnsmasq/default.leases"
    line="    IP=$(ip n | grep $(tripleo get-vm-mac $UNDERCLOUD_VM_NAME) | awk '{print $1;}')"
  when: workarounds.enabled is defined and workarounds.enabled|bool

- name: run instack-virt-setup
  shell: >
    source {{ instack_user_home }}/virt-setup-env;
    instack-virt-setup > {{ instack_user_home }}/instack-virt-setup.log;
  register: instack_virt_setup_result
  ignore_errors: yes

- name: destroy default pool
  command: virsh pool-destroy default
  sudo: yes
  ignore_errors: true
  when: "instack_virt_setup_result.rc !=0"

- name: update libvirtd unix_sock_group
  lineinfile: dest=/etc/libvirt/libvirtd.conf
              regexp=^unix_sock_group
              line='unix_sock_group = "{{ provisioner.remote_user }}"'
  when: "instack_virt_setup_result.rc !=0"
  sudo: yes

- name: remove libvirt qemu capabilities cache
  command: rm -Rf /var/cache/libvirt/qemu/capabilities/
  sudo: yes
  when: "instack_virt_setup_result.rc != 0"
  # more workaround for the SATA error RHBZ#1195882

- name: restart libvirtd
  service: name=libvirtd state=restarted
  sudo: yes
  when: "instack_virt_setup_result.rc != 0"

- name: inspect virsh capabilities
  command: 'virsh capabilities'
  when: "instack_virt_setup_result.rc != 0"

- name: stop virbr0
  command: ip link set virbr0 down
  sudo: yes
  ignore_errors: true
  when: "instack_virt_setup_result.rc != 0"

- name: delete libvirt bridge virbr0
  command: brctl delbr virbr0
  sudo: yes
  ignore_errors: true
  when: "instack_virt_setup_result.rc != 0"

- name: start default libvirt network
  command: virsh net-start default
  sudo: yes
  ignore_errors: true
  when: "instack_virt_setup_result.rc != 0"

- name: retry run instack-virt-setup
  shell: >
    virsh undefine instack;
    source {{ instack_user_home }}/virt-setup-env;
    instack-virt-setup > {{ instack_user_home }}/instack-virt-setup-retry.log;
  when: "instack_virt_setup_result.rc !=0"

- name: print out all the VMs
  shell: >
    sudo virsh list --all

- name: get undercloud vm ip address
  shell: >
    export PATH='/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/stack/bin';
    ip n | grep $(tripleo get-vm-mac instack) | awk '{print $1;}'
  when: undercloud_ip is not defined
  register: undercloud_vm_ip_result

- name: set_fact for undercloud ip
  set_fact: undercloud_ip={{ undercloud_vm_ip_result.stdout }}
