---

- name: define overcloud demo password
  shell: sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking=no' -p {{ job_var.vm_ssh_port }} stack@{{ job_var.instack_virt_host }} "cat ~/tripleo-overcloud-passwords | grep 'OVERCLOUD_DEMO_PASSWORD' | awk -F= '{print $NF}' | sed -n -e 's/^.*OVERCLOUD_DEMO_PASSWORD\=//p'"
  register: overcloud_demo_passwd

- name: define overcloud admin password
  shell: sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking=no' -p {{ job_var.vm_ssh_port }} stack@{{ job_var.instack_virt_host }} "cat ~/tripleo-overcloud-passwords | grep 'OVERCLOUD_ADMIN_PASSWORD' | awk -F= '{print $NF}' | sed -n -e 's/^.*OVERCLOUD_ADMIN_PASSWORD\=//p'"
  register: overcloud_admin_passwd

- name: define controller ip
  shell: sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking=no' -p {{ job_var.vm_ssh_port }} stack@{{ job_var.instack_virt_host }} "source stackrc; nova list | grep Controller | awk -F= '{print $NF}' | grep -o '192\.[0-9]*\.[0-9]*\.[0-9]*' | sed 's/ //'"
  register: controller_node_ip

- name: get instack_vm ip address
  shell: 'cat /var/lib/libvirt/dnsmasq/default.leases | grep $(tripleo get-vm-mac instack) | cut -d " " -f3'
  register: instack_vm_ip

- name: get tempest machine ip address
  shell: 'cat /var/lib/libvirt/dnsmasq/default.leases | grep $(tripleo get-vm-mac tempest) | cut -d " " -f3'
  register: tempest_machine_ip

- name: try if tunnels already exist
  shell: 'netstat -tulpn'
  register: tunnels_exist

- name: copy ssh keys from virt-host to the controller
  shell: >
    sshpass -p {{ job_var.vm_pass }} ssh -x -l stack {{ job_var.instack_virt_host }} -p {{ job_var.vm_ssh_port }} "source /home/stack/stackrc; scp -o 'StrictHostKeyChecking=no' /home/stack/.ssh/authorized_keys heat-admin@{{ controller_node_ip.stdout }}:/home/heat-admin/.ssh/"
  when: tunnels_exist.stdout != "*{{ job_var.vm_tempest_port }}*"

- name: set up ssh tunnels to ssh from the instack vm to the controller
# (instack vm -> controller, virt-host -> instack vm, virt-host -> tempest machine)
  shell: >
    sshpass -p {{ job_var.vm_pass }} ssh -x -l stack {{ job_var.instack_virt_host }} -p {{ job_var.vm_ssh_port }} "sudo iptables -I INPUT -p tcp --dport {{ job_var.vm_tempest_port }} -j ACCEPT; sshpass -p {{ job_var.vm_pass }} ssh -l stack -o 'StrictHostKeyChecking no' -g -N -L {{ job_var.vm_tempest_port }}:{{ controller_node_ip.stdout }}:22 {{ instack_vm_ip.stdout }} &" &
  when: tunnels_exist.stdout != "*{{ job_var.vm_tempest_port }}*"

- name:  set up ssh tunnels to ssh from the virt-host to the controller
  shell: "sudo iptables -I INPUT -p tcp --dport {{ job_var.vm_tempest_port }} -j ACCEPT; sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking no' -g -N -L {{ job_var.vm_tempest_port }}:{{ instack_vm_ip.stdout }}:{{ job_var.vm_tempest_port }} {{ job_var.instack_virt_host }} &"
  when: tunnels_exist.stdout != "*{{ job_var.vm_tempest_port }}*"

- name: set up ssh tunnels to ssh to the tempest machine
  shell: "sudo iptables -I INPUT -p tcp --dport {{ job_var.tempest_machine_port }} -j ACCEPT; sshpass -p {{ job_var.vm_pass }} ssh -l root -o 'StrictHostKeyChecking no' -g -N -L {{ job_var.tempest_machine_port }}:{{ tempest_machine_ip.stdout }}:22 {{ job_var.instack_virt_host }} &"
  when: tunnels_exist.stdout != "*{{ job_var.vm_tempest_port }}*"

- name: find if route to ping controller node from undercloud vm exists
  shell: >
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.vm_ssh_port }} "echo 2 > /proc/sys/net/ipv4/conf/eth0/rp_filter";
    ip route show 192.0.2.0/24 | wc -l
  register: ip_route_exists

- name: add route to ping controller node from undercloud vm
  shell: "route add -net 192.0.2.0 netmask 255.255.255.0 gw {{ instack_vm_ip.stdout }}"
  when: ip_route_exists.stdout == "0"

- name: find if route to ping controller node from tempest vm exists
  shell: sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking=no' -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} 'ip route show 192.0.2.0/24 | wc -l'
  register: ip_route_from_tempest_machine_exists

- name: add route to ping controller node from tempest vm
  shell:  sshpass -p {{ job_var.vm_pass }} ssh -o 'StrictHostKeyChecking=no' -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "route add -net 192.0.2.0 netmask 255.255.255.0 gw {{ instack_vm_ip.stdout }}"
  when: ip_route_from_tempest_machine_exists.stdout == "0"

- name: add /home/root dir
  shell: sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "if [ ! -d '/home/root' ]; then mkdir /home/root; fi"

- name: copy ssh keys to tempest machine and controller node
  shell: >
    sshpass -p {{ job_var.vm_pass }} scp -P {{ job_var.tempest_machine_port }} /root/.ssh/authorized_keys root@{{ job_var.instack_virt_host }}:/root/.ssh/

- name: create keys for tempest machine and copy those keys to controller node
  shell: >
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "rpm -qa | grep -qw sshpass || yum install -y sshpass";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "echo -e  'y\n'|ssh-keygen -q -t rsa -N '' -C tempest-key -f tempest-key";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "cp /root/tempest-key .ssh/id_rsa; cp /root/tempest-key.pub .ssh/id_rsa.pub";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "sshpass -p {{ job_var.vm_pass }} ssh -p {{ job_var.vm_ssh_port }} stack@{{ job_var.instack_virt_host }} -o 'StrictHostKeyChecking=no' &";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }} "sshpass -p {{ job_var.vm_pass }} scp -P {{ job_var.vm_ssh_port }} -o 'StrictHostKeyChecking=no' '/root/tempest-key.pub' stack@{{ job_var.instack_virt_host }}:/home/stack/tempest-key.pub";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }}  "sshpass -p {{ job_var.vm_pass }} scp -P {{ job_var.vm_ssh_port }} -o 'StrictHostKeyChecking=no' '/root/tempest-key' stack@{{ job_var.instack_virt_host }}:/home/stack/tempest-key";
    sshpass -p {{ job_var.vm_pass }} ssh -x -l stack {{ job_var.instack_virt_host }} -p {{ job_var.vm_ssh_port }} "ssh-copy-id -i '/home/stack/tempest-key.pub' heat-admin@{{ controller_node_ip.stdout }}"

- name: add host with root user
  add_host: name={{ job_var.vm_ssh_port }} groups=instack-undercloud ansible_ssh_host={{ job_var.instack_virt_host }} ansible_ssh_port={{ job_var.vm_ssh_port }} ansible_ssh_user=root

- name: add tempest host
  add_host: name=tempest groups=tempest ansible_ssh_host={{ job_var.instack_virt_host }} ansible_ssh_port={{ job_var.tempest_machine_port }} ansible_ssh_user=root ansible_default_ipv4.address={{ tempest_machine_ip.stdout }}

- name: add controller host
  add_host: name=controller groups=controller ansible_ssh_host={{ job_var.instack_virt_host }} ansible_ssh_port={{ job_var.vm_tempest_port }} ansible_ssh_user=heat-admin private_ip={{ controller_node_ip.stdout }} ansible_default_ipv4.address={{ controller_node_ip.stdout }} admin_password={{ overcloud_admin_passwd.stdout }} demo_password={{ overcloud_demo_passwd.stdout }}

- name: ssh to instack-undercloud
  shell: ssh -o 'StrictHostKeyChecking=no' -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.vm_ssh_port }}  hostname

- name: ssh to tempest host
  shell: ssh -o 'StrictHostKeyChecking=no' -x -l root {{ job_var.instack_virt_host }} -p {{ job_var.tempest_machine_port }}  hostname

- name: ssh to controller node
  shell: ssh -o 'StrictHostKeyChecking=no' -x -l heat-admin {{ job_var.instack_virt_host }} -p {{ job_var.vm_tempest_port }} hostname

- name: add role needed for tempest
  shell: ssh -o 'StrictHostKeyChecking=no' -x -l heat-admin {{ job_var.instack_virt_host }} -p {{ job_var.vm_tempest_port }} 'sudo cp /root/stackrc .; source stackrc; if [[ -n $(keystone role-list | grep "heat_stack_owner") ]]; then sleep 1; else keystone role-create --name heat_stack_owner; fi'

