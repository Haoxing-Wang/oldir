---

- name: download key files
  shell: >
    chdir={{ jenkins.workspace }}/{{ jenkins.job_name }}
    cp {{ provisioner.key_file }} {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.key_file }};
    chmod 600 {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{job_var.key_file }};
    cp {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{job_var.key_file }} {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{job_var.id_rsa }};
    chmod 600 {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{job_var.id_rsa }};
    cp {{ provisioner.pub_file }} {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.id_rsa_pub }};
    chmod 644 {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.id_rsa_pub }}

- name: get remote config file with custom options
  shell: >
    chdir={{ jenkins.workspace }}/{{ jenkins.job_name }}
    wget {{ job_var.config_file_remote }} -O {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.config_file_name }};
    cat {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.config_file_name }}
  when: jenkins.job_name == '*custom*'

- name: check if {{ jenkins.rhos_ci_home }}/.ssh/known_hosts exists
  stat: path="{{ jenkins.rhos_ci_home }}/.ssh/known_hosts"
  register: ssh_known_hosts_exists

- name: remove host name from known_hosts
  shell: >
    sed -i  "/]:{{ job_var.vm_ssh_port }}/d" {{ jenkins.rhos_ci_home }}/.ssh/known_hosts;
    sed -i  "/{{ job_var.instack_virt_host }}/d" {{ jenkins.rhos_ci_home }}/.ssh/known_hosts;
  when: ssh_known_hosts_exists.stat.exists == True

- name: check if ~/.ssh/known_hosts exists
  stat: path="~/.ssh/known_hosts"
  register: tilda_known_hosts_exists

- name: remove host name ~/.ssh/from known_hosts
  shell: >
    sed -i  "/]:{{ job_var.vm_ssh_port }}/d" ~/.ssh/known_hosts;
    sed -i  "/{{ job_var.instack_virt_host }}/d" ~/.ssh/known_hosts;
  when: tilda_known_hosts_exists.stat.exists == True

- name: add instack-virt-host to inventory file
  add_host: name={{ job_var.instack_virt_host }} groups=instack-virt-host ansible_ssh_host={{ job_var.instack_virt_host }} ansible_ssh_user=root ansible_ssh_private_key_file={{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.key_file }}

- name: ssh to instack virt host
  shell: ssh -o 'StrictHostKeyChecking=no' root@{{ job_var.instack_virt_host }} -i {{ jenkins.workspace }}/{{ jenkins.job_name }}/{{ job_var.key_file }}

