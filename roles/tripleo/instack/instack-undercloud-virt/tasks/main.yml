---

- name: install sshpass for virtual-power-key copy
  yum: name=sshpass state=present
  sudo_user: root
  sudo: yes

- name: check virtual-power-key exists
  stat: path="{{ instack_user_home.stdout }}/virtual-power-key.pub"
  register: virtual_power_key_present

- name: create the virtual-power-key
  shell: >
    chdir={{ instack_user_home.stdout }}
    ssh-keygen -t rsa -N '' -C virtual-power-key -f virtual-power-key
  when: virtual_power_key_present.stat.exists == False

- name: ssh to virt-host
  shell: >
    chdir={{ instack_user_home.stdout }}
    sshpass -p {{ config.pass}} ssh -o 'StrictHostKeyChecking=no' {{ instack_user }}@192.168.122.1 &
  when: virtual_power_key_present.stat.exists == False

- name: copy the virtual-power-key to the virt host
  shell: >
    chdir={{ instack_user_home.stdout }}
    sshpass -p {{ config.pass }} ssh-copy-id -i virtual-power-key.pub {{ instack_user }}@192.168.122.1
  when: virtual_power_key_present.stat.exists == False

- name: enable the rdo-release repository
  yum: name="{{ rdo[ config.version ].instack_release_rpm[ ansible_distribution ] }}" state=present #"
  when: ansible_distribution == 'Fedora' and config.custom_repo is not defined
  sudo_user: root
  sudo: yes
  register: rdo_repo_output

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: ansible_distribution == 'Fedora' and config.custom_repo is not defined

- name: enable a custom repository
  yum: name="{{ config.custom_repo }}"
  when: config.custom_repo is defined
  sudo_user: root
  sudo: yes
  register: rdo_repo_output

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: config.custom_repo is defined

- name: install instack-undercloud
  yum: name=instack-undercloud state=latest
  when: config.instack_undercloud_rpm is not defined
  sudo_user: root
  sudo: yes
  register: instack_undercloud_output

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: config.instack_undercloud_rpm is not defined

- name: install updated version of instack-undercloud if it exists
  yum: name="{{ config.instack_undercloud_rpm }}"
  when: config.instack_undercloud_rpm is defined
  sudo_user: root
  sudo: yes
  register: instack_undercloud_output

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: config.instack_undercloud_rpm is defined

- name: install updated version of other rpms if they exist
  yum: name={{ item }}
  with_items: config.updated_rpms_list
  when: config.updated_rpms_list is defined
  sudo_user: root
  sudo: yes
  register: custom_rpm_output

- name: print custom_rpm_output
  debug: var=custom_rpm_output.stdout
  when: config.updated_rpms_list is defined

- name: check answers file exists
  shell: "[ -e /usr/share/doc/instack-undercloud/instack-virt.answers.sample ]"
  register: answers_file_present
  changed_when: false
  failed_when: false

- name: copy virt answers file
  shell: >
    chdir={{ instack_user_home.stdout }}
    cp /usr/share/doc/instack-undercloud/instack-virt.answers.sample {{ instack_user_home.stdout }}/instack.answers

- name: check if install undercloud has been run
  stat: path="{{ instack_user_home.stdout }}/.instack/install-undercloud.log"
  register: instack_log_present

- name: run script to install undercloud
  register: instack_undercloud_result
  command:  chdir={{ instack_user_home.stdout }} instack-install-undercloud-packages
  when: instack_log_present.stat.exists == False

- name: search output for complete status
  shell: "cat {{ instack_user_home.stdout }}/.instack/install-undercloud.log | grep 'instack-install-undercloud-packages complete'"
  register: grep_output

- name: report failure if install is not complete
  fail: msg="report error"
  when: grep_output.stdout == ""

- name: copy stackrc file
  shell: "cp /root/stackrc {{ instack_user_home.stdout }}"
  sudo_user: root
  sudo: yes

- name: copy tripleo-undercloud-passwords file
  shell: "cp /root/tripleo-undercloud-passwords {{ instack_user_home.stdout }}"
  sudo_user: root
  sudo: yes

