---

# RDO repos
- name: enable the rdo-release repository
  yum: name="{{ product.rpm[ ansible_distribution ]  }}" state=present #"
  when: ansible_distribution == 'Fedora' and (product.repo_type == 'stage' or product.repo_type == 'production') and installer.custom_repo is not defined and (product.repo.copr is not defined or (product.repo.copr is defined and product.repo_type == 'stage'))
  register: rdo_repo_output
  sudo_user: root
  sudo: yes

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: ansible_distribution == 'Fedora' and (product.repo_type == 'stage' or product.repo_type == 'production') and installer.custom_repo is not defined and (product.repo.copr is not defined or (product.repo.copr is defined and product.repo_type == 'stage'))

- include: ../../../../upstream_rpms/tasks/main.yml
  when: product.repo_type != 'stage' and product.repo_type != 'production' and product.name != 'rhos'

- name: change baseurl for rdo repo
  shell: "sed -i 's#^baseurl.*#baseurl={{ product.repo.stage[ansible_distribution][distro.version] }}#' /etc/yum.repos.d/rdo-release.repo"
  when: product.repo.copr is defined and product.repo_type == 'stage'
  sudo_user: root
  sudo: yes

# RHOS repos
- name: get subscription-manager command
  yum: name="subscription-manager"
  when: ansible_distribution == 'RedHat'
  sudo_user: root
  sudo: yes

- name: Create the RHOS Release Repository
  template: src=../../../../linux/rhel/rhos/templates/rhos-release.repo.j2 dest=/etc/yum.repos.d/rhos-release.repo
  when: ansible_distribution == 'RedHat' and product.name == 'rhos'
  sudo_user: root
  sudo: yes

- name: install rhos-release
  yum: name=rhos-release state=latest
  when: ansible_distribution == 'RedHat' and product.name == 'rhos'
  sudo_user: root
  sudo: yes

# poodle repos
- name: Create the RHOS poodle repository
  shell: "rhos-release -x {{ product.version|int }}; rhos-release -d {{ product.version|int }}"
  when: ansible_distribution == 'RedHat' and product.name == 'rhos' and product.repo_type == 'poodle'
  sudo_user: root
  sudo: yes

# puddle repos
- name: Create the RHOS poodle repository
  shell: "rhos-release -x {{ product.version|int }}; rhos-release 6 -p {{ product.repo.puddle_pin_version }}"
  when: ansible_distribution == 'RedHat' and product.name == 'rhos' and product.repo_type == 'puddle' and product.repo.puddle_pin_version is defined
  sudo_user: root
  sudo: yes

- name: erase rhos-release
  shell: "yum erase -y rhos-release"
  when: ansible_distribution == 'RedHat' and product.name == 'rhos' and (product.repo_type == 'poodle' or product.repo_type == 'puddle')
  sudo_user: root
  sudo: yes

# copr repos
- name: enable tripleo copr repository
  shell: "sudo curl -o /etc/yum.repos.d/slagle-openstack-m.repo {{ product.repo.copr[ ansible_distribution ][distro.version] }}"
  when: product.repo.copr is defined
  register: rdo_repo_output
  sudo_user: root
  sudo: yes

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: product.repo.copr is defined

# custom repos
- name: enable a custom repository
  yum: name="{{ installer.custom_repo }}"
  when: installer.custom_repo is defined
  register: rdo_repo_output
  sudo_user: root
  sudo: yes

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: installer.custom_repo is defined

- name: install instack-undercloud
  yum: name=instack-undercloud state=latest
  when: ansible_distribution == 'Fedora' and installer.instack_undercloud_rpm is not defined
  register: instack_undercloud_output
  sudo_user: root
  sudo: yes

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: ansible_distribution == 'Fedora' and installer.instack_undercloud_rpm is not defined

- name: install updated version of instack-undercloud if it exists
  yum: name="{{ installer.instack_undercloud_rpm }}"
  when: installer.instack_undercloud_rpm is defined
  register: instack_undercloud_output
  sudo_user: root
  sudo: yes

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: installer.instack_undercloud_rpm is defined

- name: install updated version of other rpms if they exist
  yum: name={{ item }}
  with_items: installer.updated_rpms_list
  when: installer.updated_rpms_list is defined
  register: custom_rpm_output
  sudo_user: root
  sudo: yes

- name: print custom_rpm_output
  debug: var=custom_rpm_output.stdout
  when: installer.updated_rpms_list is defined

