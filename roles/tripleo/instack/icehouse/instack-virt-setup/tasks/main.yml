---

- name: add export of LIVBIRT_DEFAULT_URI to bashrc file
  shell: "echo 'export LIBVIRT_DEFAULT_URI=\"qemu:///system\"' >> ~/.bashrc"
  sudo_user: "{{ instack.user.stack.name }}"
  sudo: yes

- name: enable the rdo-release repository
  yum: name="{{  product.rpm[ ansible_distribution ] }}" state=present #"
  when: ansible_distribution == 'Fedora' and installer.custom_repo is not defined
  register: rdo_repo_output

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: ansible_distribution == 'Fedora' and installer.custom_repo is not defined

- name: enable a custom repository
  yum: name="{{ installer.custom_repo }}"
  when: installer.custom_repo is defined
  register: rdo_repo_output

- name: print rdo_repo_output
  debug: var=rdo_repo_output.stdout
  when: installer.custom_repo is defined

- name: install instack-undercloud
  yum: name=instack-undercloud state=latest
  when: installer.instack_undercloud_rpm is not defined
  register: instack_undercloud_output

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: installer.instack_undercloud_rpm is not defined

- name: install updated version of instack-undercloud if it exists
  yum: name="{{ installer.instack_undercloud_rpm }}"
  when: installer.instack_undercloud_rpm is defined
  register: instack_undercloud_output

- name: print instack_undercloud_output
  debug: var=instack_undercloud_output.stdout
  when: installer.instack_undercloud_rpm is defined

- name: install updated version of other rpms if they exist
  yum: name={{ item }}
  with_items: installer.updated_rpms_list
  when: installer.updated_rpms_list is defined
  register: custom_rpm_output

- name: print custom_rpm_output
  debug: var=custom_rpm_output.stdout
  when: installer.updated_rpms_list is defined

- name: install libguestfs-tools
  yum: name=libguestfs-tools

- name: install systemd
  yum: name=systemd

- name: run script to install required dependencies
  shell: "cd {{ instack_user_home.stdout }}; export LIBVIRT_DEFAULT_URI=\"qemu:///system\" ; source /usr/libexec/openstack-tripleo/devtest_variables.sh; tripleo install-dependencies"
  ignore_errors: yes
  sudo_user: "{{ instack.user.stack.name }}"
  sudo: yes

- name: run script to setup virtual environment
  register: instack_virt_result
  shell: >
    chdir={{ instack_user_home.stdout }}
    export LIBVIRT_DEFAULT_URI="qemu:///system";
    export UNDERCLOUD_ROOT_PASSWORD={{ instack.environ.vm_pw }};
    instack-virt-setup
  sudo_user: "{{ instack.user.stack.name }}"
  sudo: yes

- name: start instack vm
  shell: "export LIBVIRT_DEFAULT_URI=\"qemu:///system\" ; sleep 5; virsh list --all; virsh start instack"
  sudo_user: "{{ instack.user.stack.name }}"
  sudo: yes

- name: get instack vm ip address
  shell: >
     chdir={{ instack_user_home.stdout }}
     sleep 30;
     cat /var/lib/libvirt/dnsmasq/default.leases | grep $(tripleo get-vm-mac instack) | awk '{print $3;}'
  sudo_user: "{{ instack.user.stack.name }}"
  sudo: yes
  register: instack_vm_ip_result

- name: print instack_vm_ip_result
  debug: var=instack_vm_ip_result.stdout

- name: copy keys from root user
  shell: "cat /root/.ssh/authorized_keys >> {{ instack_user_home.stdout }}/.ssh/authorized_keys"

- name: install sshpass for tunnel
  yum: name=sshpass state=present

- name: open ssh tunnel to instack vm on port {{ instack.environ.vm_ssh_port }}
  shell: "sudo iptables -I INPUT -p tcp --dport {{ instack.environ.vm_ssh_port }} -j ACCEPT; sshpass -p {{ instack.user.stack.password }} ssh -o \"StrictHostKeyChecking no\" -g -N -L {{ instack.environ.vm_ssh_port }}:{{ instack_vm_ip_result.stdout }}:22 `hostname` &"
  register: tunnel_port_output
  sudo_user: "{{ instack.user.stack.name}}"
  sudo: yes
  async: 36000
  poll: "{{ 0 }}"
