# Format:
# <classname>: false - don't include this class
# <classname>: true - include and use the defaults
# <classname>:
#   <param>: <value> - include and override the default(s)
#
# See params.pp in each class for what options are available

{% set provisioning_net_prefix  =  provisioner.network.nic.net_2.ip_address | regex_replace('(\d{1,3}\.\d{1,3}\.\d{1,3})(\.\d{1,3})', '\\1') %}
{% set provisioning_network_address = provisioning_net_prefix  + "." + nodes.staypuft.provisioning_net_suffix %}
---
  foreman:
    foreman_url: "https://{{ ansible_fqdn }}"
    unattended: true
    authentication: true
    passenger: true
    passenger_scl: ruby193
    use_vhost: true
    ssl: true
    custom_repo: true
    repo: nightly
    configure_epel_repo: false
    configure_scl_repo: true
    selinux:
    gpgcheck: true
    version: present
    db_manage: true
    db_type: postgresql
    db_adapter:
    db_host:
    db_port:
    db_database:
    db_username: foreman
    db_password: kjg6Fz2jJHvdXg9padoNeJMJaBNjUWzB
    db_sslmode:
    app_root: /usr/share/foreman
    user: foreman
    group: foreman
    user_groups:
      - puppet
    environment: production
    puppet_home: /var/lib/puppet
    locations_enabled: false
    organizations_enabled: false
    passenger_interface: ""
    server_ssl_ca: /var/lib/puppet/ssl/certs/ca.pem
    server_ssl_chain: /var/lib/puppet/ssl/certs/ca.pem
    server_ssl_cert: /var/lib/puppet/ssl/certs/{{ ansible_fqdn  }}.pem
    server_ssl_key: /var/lib/puppet/ssl/private_keys/{{ ansible_fqdn }}.pem
    oauth_active: true
    oauth_map_users: false
    oauth_consumer_key: juLA3adzVbb2wPy3YJYQxzuCXAwq85Vg
    oauth_consumer_secret: aSfhehMHz6xcK5qDc6cVJCWv7szNtMB2
    passenger_prestart: true
    passenger_min_instances: "1"
    passenger_start_timeout: "600"
    admin_username: admin
    admin_password: "redhat"
    admin_first_name:
    admin_last_name:
    admin_email:
    initial_organization:
    initial_location:
    ipa_authentication: false
    http_keytab: /etc/httpd/conf/http.keytab
    pam_service: foreman
    configure_ipa_repo: false
    ipa_manage_sssd: true
    websockets_encrypt: true
    websockets_ssl_key: /var/lib/puppet/ssl/private_keys/{{ ansible_fqdn }}.pem
    websockets_ssl_cert: /var/lib/puppet/ssl/certs/{{ ansible_fqdn }}.pem
  foreman_proxy:
    repo: nightly
    gpgcheck: true
    custom_repo: true
    version: present
    port: 8443
    dir: /usr/share/foreman-proxy
    user: foreman-proxy
    log: /var/log/foreman-proxy/proxy.log
    ssl: true
    ssl_ca: /var/lib/puppet/ssl/certs/ca.pem
    ssl_cert: /var/lib/puppet/ssl/certs/{{ ansible_fqdn }}.pem
    ssl_key: /var/lib/puppet/ssl/private_keys/{{ ansible_fqdn }}.pem
    trusted_hosts: []
    manage_sudoersd: true
    use_sudoersd: true
    puppetca: true
    ssldir: /var/lib/puppet/ssl
    puppetdir: /etc/puppet
    autosign_location: /etc/puppet/autosign.conf
    puppetca_cmd: "/usr/bin/puppet cert"
    puppet_group: puppet
    puppetrun: true
    puppetrun_cmd: "/usr/bin/puppet kick"
    puppetrun_provider: puppetssh
    customrun_cmd: /bin/false
    customrun_args: "-ay -f -s"
    puppetssh_sudo: false
    puppetssh_command: "/usr/bin/sleep 30; /usr/bin/pkill puppet; /usr/bin/sleep 10; /usr/bin/rm -f /var/lib/puppet/state/agent_catalog_run.lock; /usr/bin/puppet agent --onetime --no-usecacheonfailure --no-daemonize"
    puppetssh_user: root
    puppetssh_keyfile: /usr/share/foreman-proxy/.ssh/id_rsa
    puppet_user: root
    puppet_url: "https://{{ ansible_fqdn }}:8140"
    puppet_ssl_ca: /var/lib/puppet/ssl/certs/ca.pem
    puppet_ssl_cert: /var/lib/puppet/ssl/certs/{{ ansible_fqdn }}.pem
    puppet_ssl_key: /var/lib/puppet/ssl/private_keys/{{ ansible_fqdn }}.pem
    puppet_use_environment_api:
    tftp: true
    tftp_syslinux_root: /usr/share/syslinux
    tftp_syslinux_files:
      - pxelinux.0
      - menu.c32
      - chain.c32
      - memdisk
    tftp_root: /var/lib/tftpboot/
    tftp_dirs:
      - /var/lib/tftpboot//pxelinux.cfg
      - /var/lib/tftpboot//boot
    tftp_servername: "{{ provisioning_network_address }}"
    dhcp: true
    dhcp_managed: true
    dhcp_interface: {{ staypuft_provision_interface.stdout }}
    dhcp_gateway: "{{ provisioning_network_address }}"
    dhcp_range: "{{provisioning_net_prefix }}.100 {{ provisioning_net_prefix }}.254"
    dhcp_nameservers: "{{ provisioning_network_address }}"
    dhcp_vendor: isc
    dhcp_config: /etc/dhcp/dhcpd.conf
    dhcp_leases: /var/lib/dhcpd/dhcpd.leases
    dhcp_key_name: ""
    dhcp_key_secret: ""
    dns: true
    dns_managed: true
    dns_provider: nsupdate
    dns_interface: {{ staypuft_provision_interface.stdout }}
    dns_zone: {{ ansible_domain }}
    dns_reverse: "{{ provisioning_net_prefix | regex_replace('(\d{1,3})\.(\d{1,3})\.(\d{1,3})', '\\3.\\2.\\1') }}.in-addr.arpa"
    dns_server: "127.0.0.1"
    dns_ttl: "86400"
    dns_tsig_keytab: /etc/foreman-proxy/dns.keytab
    dns_tsig_principal: "foremanproxy/{{ ansible_fqdn }}@{{ ansible_domain|upper }}"
    dns_forwarders:
      - "{{ ansible_default_ipv4.gateway }}"
    virsh_network: default
    bmc: false
    bmc_default_provider: ipmitool
    realm: false
    realm_provider: freeipa
    realm_keytab: /etc/foreman-proxy/freeipa.keytab
    realm_principal: "realm-proxy@EXAMPLE.COM"
    freeipa_remove_dns: true
    keyfile: /etc/rndc.key
    register_in_foreman: true
    foreman_base_url: "https://{{ ansible_fqdn }}"
    registered_name: {{ ansible_fqdn }}
    registered_proxy_url: "https://{{ ansible_fqdn }}:8443"
    oauth_effective_user: admin
    oauth_consumer_key: juLA3adzVbb2wPy3YJYQxzuCXAwq85Vg
    oauth_consumer_secret: aSfhehMHz6xcK5qDc6cVJCWv7szNtMB2
  sshkeypair:
    foreman_proxy_user: foreman-proxy
    foreman_proxy_group: foreman-proxy
    foreman_proxy_home: /usr/share/foreman-proxy
    foreman_user: foreman
    foreman_group: foreman
    foreman_home: /usr/share/foreman
    strict_host_checking: "no"
  puppet:
    version: present
    user: puppet
    group: puppet
    dir: /etc/puppet
    port: 8140
    listen: false
    pluginsync: true
    splay: false
    splaylimit: "1800"
    runinterval: 1800
    usecacheonfailure: true
    runmode: service
    cron_cmd: 
    agent_noop: false
    show_diff: false
    configtimeout: 120
    ca_server: ""
    dns_alt_names: []
    use_srv_records: false
    srv_domain: {{ ansible_domain }}
    pluginsource: "puppet:///plugins"
    classfile: "$vardir/classes.txt"
    hiera_config: "$confdir/hiera.yaml"
    main_template: puppet/puppet.conf.erb
    agent_template: puppet/agent/puppet.conf.erb
    auth_template: puppet/auth.conf.erb
    nsauth_template: puppet/namespaceauth.conf.erb
    allow_any_crl_auth: false
    client_package: 
      - puppet
    agent: true
    puppetmaster: 
    server: true
    server_user: puppet
    server_group: puppet
    server_dir: /etc/puppet
    server_port: 8140
    server_vardir: /var/lib/puppet
    server_ca: true
    server_reports: foreman
    server_passenger: true
    server_service_fallback: true
    server_passenger_max_pool: 12
    server_httpd_service: httpd
    server_external_nodes: /etc/puppet/node.rb
    server_template: puppet/server/puppet.conf.erb
    server_config_version: 
    server_git_repo: false
    server_dynamic_environments: false
    server_directory_environments: true
    server_environments: 
      - development
      - production
    server_environments_owner: puppet
    server_environments_group: root
    server_environments_mode: "0755"
    server_envs_dir: /etc/puppet/environments
    server_manifest_path: /etc/puppet/manifests
    server_common_modules_path: 
      - /etc/puppet/environments/common
      - /etc/puppet/modules
      - /usr/share/puppet/modules
    server_git_repo_path: /var/lib/puppet/puppet.git
    server_git_branch_map: {}
    server_post_hook_content: puppet/server/post-receive.erb
    server_post_hook_name: post-receive
    server_storeconfigs_backend: 
    server_app_root: /etc/puppet/rack
    server_ssl_dir: /var/lib/puppet/ssl
    server_package: 
      - puppet-server
    server_certname: {{ ansible_fqdn }}
    server_enc_api: v2
    server_report_api: v2
    server_request_timeout: 60
    server_ca_proxy: ""
    server_strict_variables: false
    server_foreman_url: "https://{{ ansible_fqdn }}"
    server_foreman_ssl_ca: /var/lib/puppet/ssl/certs/ca.pem
    server_foreman_ssl_cert: /var/lib/puppet/ssl/certs/{{ ansible_fqdn }}.pem
    server_foreman_ssl_key: /var/lib/puppet/ssl/private_keys/{{ ansible_fqdn }}.pem
    server_facts: true
    server_puppet_home: /var/lib/puppet
    server_puppet_basedir: /usr/share/ruby/vendor_ruby/puppet
  "foreman::plugin::discovery":
    version: latest
    source: "http://downloads.theforeman.org/discovery/releases/latest/"
    initrd: foreman-discovery-image-latest-img
    kernel: foreman-discovery-image-latest-vmlinuz
    install_images: false
  "foreman::plugin::tasks": {}
  "foreman::plugin::bootdisk": false
  "foreman::plugin::staypuft":
    configure_networking: false
    configure_firewall: true
    interface: {{ staypuft_provision_interface.stdout }}
    ip: "{{ provisioning_network_address }}"
    netmask: "255.255.255.0"
    own_gateway: "{{ ansible_default_ipv4.gateway }}"
    gateway: "{{ provisioning_network_address }}"
    dns: "{{ ansible_default_ipv4.gateway }}"
    network: "{{ provisioning_net_prefix }}.0"
    from: "{{ provisioning_net_prefix }}.100"
    to: "{{ provisioning_net_prefix }}.254"
    domain: {{ ansible_domain }}
    ntp_host: {{ distro.config.ntp_server }}
    timezone: UTC
    root_password: "$1$z4SXbFDFYQ6wIUqwjcUxdA==\n"
    ssh_public_key: "{{ hostvars["localhost"].public_key }}"
