---
deployment:
  name: wes_test_01
  description: ''
  ui_params:
    amqp_provider: rabbitmq
    networking: neutron
    layout_name: Controller / Compute
    platform: rhel7
    services:
      nova:
        network_manager: FlatDHCPManager
        vlan_range: 
        public_floating_range: 
        private_fixed_range: 
      neutron:
        network_segmentation: vxlan
        tenant_vlan_ranges: 
      glance:
        driver_backend: local
        nfs_network_path: 
      cinder:
        backend_lvm: 'false'
        backend_ceph: 'false'
        backend_nfs: 'true'
        backend_eqlx: 'false'
        nfs_uri: foreman:/cinder
        rbd_secret_uuid: 227d9bca-0741-447d-a027-21924f3f503e
        eqlxs: []
      passwords:
        mode: single
        single_password: dog8code
      ceph:
        fsid: a5b44d00-aa5a-4227-a45c-492023bd950a
        volumes_key: AQC3py1USIJfCBAAJndpotJwIAVXLPZEF1KW5g==
        images_key: AQC3py1UONsaCRAA5GvRkZ5I7gcH2pSuR++NZw==
  puppet_params:
    services:
    - name: AMQP (non-HA)
      params:
      - key: amqp_host
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:amqp_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: amqp_username
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: openstack
      - key: amqp_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:amqp) %>
      - key: amqp_ca
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/ipa/ca.crt
      - key: amqp_cert
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/certs/PRIV_HOST-amqp.crt
      - key: amqp_key
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/private/PRIV_HOST-amqp.key
      - key: amqp_nssdb_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:amqp_nssdb) %>
    - name: MySQL
      params:
      - key: mysql_ca
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/ipa/ca.crt
      - key: mysql_cert
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/certs/PRIV_HOST-mysql.crt
      - key: mysql_host
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:db_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: mysql_key
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/private/PRIV_HOST-mysql.key
      - key: mysql_root_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:mysql_root) %>
    - name: Keystone (non-HA)
      params:
      - key: keystone_admin_token
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:keystone_admin_token)
          %>
      - key: keystone_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:keystone_db) %>
      - key: keystonerc
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'true'
    - name: Neutron (Controller)
      params:
      - key: admin_email
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: admin@example.com
      - key: admin_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:admin) %>
      - key: controller_admin_host
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '<%= d = @host.deployment; d.ha? ? nil : d.network_query.controller_ip(''Admin
          API'') %>'
      - key: controller_priv_host
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '<%= d = @host.deployment; d.ha? ? nil : d.network_query.controller_ip(''Management'')
          %>'
      - key: controller_pub_host
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '<%= d = @host.deployment; d.ha? ? nil : d.network_query.controller_ip(''Public
          API'') %>'
      - key: enable_tunneling
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.neutron.enable_tunneling?.to_s %>
      - key: freeipa
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: horizon_ca
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/ipa/ca.crt
      - key: horizon_cert
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/certs/PUB_HOST-horizon.crt
      - key: horizon_key
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/pki/tls/private/PUB_HOST-horizon.key
      - key: horizon_secret_key
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.horizon_secret_key %>
      - key: ml2_firewall_driver
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver
      - key: ml2_flat_networks
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["*"]'
      - key: ml2_mechanism_drivers
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["openvswitch","l2population"]'
      - key: ml2_network_vlan_ranges
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.neutron.networker_vlan_ranges %>
      - key: ml2_security_group
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'true'
      - key: ml2_tenant_network_types
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["<%= @host.deployment.neutron.network_segmentation %>"]'
      - key: ml2_tunnel_id_ranges
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["10:1000"]'
      - key: ml2_type_drivers
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["vxlan","flat","vlan","gre","local"]'
      - key: ml2_vni_ranges
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["10:1000"]'
      - key: ml2_vxlan_group
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 224.0.0.1
      - key: neutron_core_plugin
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: neutron.plugins.ml2.plugin.Ml2Plugin
      - key: neutron_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:neutron_db) %>
      - key: neutron_metadata_proxy_secret
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.neutron_metadata_proxy_secret %>
      - key: neutron_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:neutron_user) %>
      - key: nova_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:nova_db) %>
      - key: nova_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:nova_user) %>
      - key: nova_default_floating_pool
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: nova
      - key: ovs_vlan_ranges
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.neutron.networker_vlan_ranges %>
      - key: provider_vlan_auto_create
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: provider_vlan_auto_trunk
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: ssl
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: tenant_network_type
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.neutron.network_segmentation %>
      - key: tunnel_id_ranges
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 1:1000
      - key: verbose
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'true'
      - key: swift_admin_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:swift_admin) %>
      - key: swift_ringserver_ip
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ''
      - key: swift_shared_secret
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.swift_shared_secret %>
      - key: swift_storage_device
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: device1
      - key: swift_storage_ips
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.network_query.controller_ips('Management') %>
    - name: Glance (non-HA)
      params:
      - key: glance_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:glance_db) %>
      - key: glance_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:glance_user) %>
      - key: glance_backend
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.glance.backend %>
      - key: glance_rbd_store_user
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: images
      - key: glance_rbd_store_pool
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: images
    - name: Cinder (controller)
      params:
      - key: cinder_backend_eqlx
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.equallogic_backend? %>
      - key: cinder_backend_eqlx_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_backend_names %>
      - key: cinder_backend_gluster
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: false
      - key: cinder_backend_gluster_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: gluster_backend
      - key: cinder_backend_iscsi
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.lvm_backend? %>
      - key: cinder_backend_iscsi_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: iscsi_backend
      - key: cinder_backend_nfs
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.nfs_backend? %>
      - key: cinder_backend_nfs_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: nfs_backend
      - key: cinder_backend_rbd
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.ceph_backend? %>
      - key: cinder_backend_rbd_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: rbd_backend
      - key: cinder_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:cinder_db) %>
      - key: cinder_multiple_backends
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.multiple_backends? %>
      - key: cinder_gluster_shares
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '[]'
      - key: cinder_nfs_shares
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: ! '["<%= @host.deployment.cinder.nfs_uri %>"]'
      - key: cinder_nfs_mount_options
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: nosharecache
      - key: cinder_san_ip
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_san_ips %>
      - key: cinder_san_login
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_san_logins %>
      - key: cinder_san_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_san_passwords %>
      - key: cinder_san_thin_provision
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_thin_provision %>
      - key: cinder_eqlx_group_name
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_group_names %>
      - key: cinder_eqlx_pool
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_pools %>
      - key: cinder_eqlx_use_chap
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_use_chap %>
      - key: cinder_eqlx_chap_login
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_chap_logins %>
      - key: cinder_eqlx_chap_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.compute_eqlx_chap_passwords %>
      - key: cinder_rbd_pool
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: volumes
      - key: cinder_rbd_ceph_conf
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: /etc/ceph/ceph.conf
      - key: cinder_rbd_flatten_volume_from_snapshot
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: cinder_rbd_max_clone_depth
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: '5'
      - key: cinder_rbd_user
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: volumes
      - key: cinder_rbd_secret_uuid
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.cinder.rbd_secret_uuid %>
      - key: cinder_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:cinder_user) %>
    - name: Heat
      params:
      - key: heat_cfn
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: heat_cloudwatch
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: 'false'
      - key: heat_db_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:heat_db) %>
      - key: heat_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:heat_user) %>
      - key: heat_auth_encrypt_key
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.heat_auth_encrypt_key %>
    - name: Ceilometer
      params:
      - key: ceilometer_metering_secret
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.ceilometer_metering_secret %>
      - key: ceilometer_user_password
        role: Controller (Neutron)
        puppetclass: quickstack::neutron::controller
        value: <%= @host.deployment.passwords.effective_value(:ceilometer_user) %>
    - name: Neutron Networker
      params:
      - key: amqp_host
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:amqp_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: amqp_password
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.effective_value(:amqp) %>
      - key: amqp_provider
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.amqp_provider %>
      - key: amqp_username
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: openstack
      - key: controller_priv_host
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ! '<%= d = @host.deployment; d.ha? ? nil : d.network_query.controller_ip(''Management'')
          %>'
      - key: enable_tunneling
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.enable_tunneling?.to_s %>
      - key: external_network_bridge
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ''
      - key: fixed_network_range
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ${$quickstack::params::fixed_network_range}
      - key: mysql_ca
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: /etc/ipa/ca.crt
      - key: mysql_host
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:db_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: neutron_db_password
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.effective_value(:neutron_db) %>
      - key: neutron_metadata_proxy_secret
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.neutron_metadata_proxy_secret %>
      - key: neutron_user_password
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.effective_value(:neutron_user) %>
      - key: nova_db_password
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.effective_value(:nova_db) %>
      - key: nova_user_password
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.passwords.effective_value(:nova_user) %>
      - key: ovs_bridge_mappings
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.networker_ovs_bridge_mappings(@host) %>
      - key: ovs_bridge_uplinks
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.networker_ovs_bridge_uplinks(@host) %>
      - key: ovs_l2_population
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: 'True'
      - key: ovs_tunnel_iface
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ! '<%= n = @host.deployment.neutron; n.enable_tunneling? ? n.tenant_iface(@host)
          : "" %>'
      - key: ovs_tunnel_network
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: ''
      - key: ovs_tunnel_types
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.ovs_tunnel_types %>
      - key: ovs_vlan_ranges
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.networker_vlan_ranges %>
      - key: ovs_vxlan_udp_port
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: '4789'
      - key: ssl
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: 'false'
      - key: tenant_network_type
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: <%= @host.deployment.neutron.network_segmentation %>
      - key: tunnel_id_ranges
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: 1:1000
      - key: verbose
        role: Neutron Networker
        puppetclass: quickstack::neutron::networker
        value: 'true'
    - name: Neutron-compute
      params:
      - key: admin_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:admin) %>
      - key: amqp_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:amqp_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: amqp_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:amqp) %>
      - key: amqp_port
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: '5672'
      - key: amqp_provider
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.amqp_provider %>
      - key: amqp_ssl_port
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: '5671'
      - key: amqp_username
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: openstack
      - key: auth_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:keystone_admin_vip)
          : d.network_query.controller_ip(''Admin API'') %>'
      - key: ceilometer
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.non_ha? %>
      - key: ceilometer_metering_secret
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.ceilometer_metering_secret %>
      - key: ceilometer_user_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:ceilometer_user) %>
      - key: ceph_cluster_network
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.network_query.network_address_for_host('Storage Clustering')
          %>
      - key: ceph_fsid
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.ceph.fsid %>
      - key: ceph_images_key
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.ceph.images_key %>
      - key: ceph_mon_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.network_query.controller_ips('Provisioning/PXE') %>
      - key: ceph_mon_initial_members
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.ceph.mon_initial_members %>
      - key: ceph_public_network
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.network_query.network_address_for_host('Provisioning/PXE')
          %>
      - key: ceph_volumes_key
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.ceph.volumes_key %>
      - key: cinder_backend_gluster
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: false
      - key: cinder_backend_nfs
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.cinder.nfs_backend? %>
      - key: cinder_backend_rbd
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.cinder.ceph_backend? %>
      - key: enable_tunneling
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.enable_tunneling?.to_s %>
      - key: glance_backend_rbd
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'false'
      - key: glance_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:glance_private_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: libvirt_images_rbd_ceph_conf
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: /etc/ceph/ceph.conf
      - key: libvirt_images_rbd_pool
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: volumes
      - key: libvirt_images_type
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: rbd
      - key: libvirt_inject_key
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'false'
      - key: libvirt_inject_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'false'
      - key: mysql_ca
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: /etc/ipa/ca.crt
      - key: mysql_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:db_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: neutron_db_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:neutron_db) %>
      - key: neutron_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:neutron_private_vip)
          : d.network_query.controller_ip(''Management'') %>'
      - key: neutron_user_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:neutron_user) %>
      - key: nova_db_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:nova_db) %>
      - key: nova_host
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= d = @host.deployment; d.ha? ? d.network_query.get_vip(:nova_public_vip)
          : d.network_query.controller_ip(''Public API'') %>'
      - key: nova_user_password
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.passwords.effective_value(:nova_user) %>
      - key: ovs_bridge_mappings
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.compute_ovs_bridge_mappings(@host) %>
      - key: ovs_bridge_uplinks
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.compute_ovs_bridge_uplinks(@host) %>
      - key: ovs_l2_population
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'True'
      - key: ovs_tunnel_iface
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ! '<%= n = @host.deployment.neutron; n.enable_tunneling? ? n.tenant_iface(@host)
          : "" %>'
      - key: ovs_tunnel_network
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ''
      - key: ovs_tunnel_types
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.ovs_tunnel_types %>
      - key: ovs_vlan_ranges
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.compute_vlan_ranges %>
      - key: ovs_vxlan_udp_port
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: '4789'
      - key: private_iface
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ''
      - key: private_ip
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.network_query.ip_for_host('Management', @host)
          %>
      - key: private_network
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: ''
      - key: rbd_secret_uuid
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.cinder.rbd_secret_uuid %>
      - key: rbd_user
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: volumes
      - key: ssl
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'false'
      - key: tenant_network_type
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: <%= @host.deployment.neutron.network_segmentation %>
      - key: tunnel_id_ranges
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 1:1000
      - key: verbose
        role: Compute (Neutron)
        puppetclass: quickstack::neutron::compute
        value: 'true'
    - name: Generic RHEL 7
      params: []
    - name: Ceph Storage (OSD) (node)
      params: []
