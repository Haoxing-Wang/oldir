---
- name: set controller variables for HA configurations
  set_fact:
      controller_name: "{{ nodes.controller01.name }}"
  when: job.ha_configuration | default (false)

- name: Ensure foreman and puppet repos are enabled
  ini_file: dest=/etc/yum.repos.d/{{ item.repo }}.repo
            section={{ item.section }}
            option={{ item.option }}
            value={{ item.value }}
  with_items:
    - { repo: foreman, section: foreman, option: enabled, value: 1 }
    - { repo: foreman, section: foreman-plugins, option: enabled, value: 1 }
    - { repo: puppetlabs, section: puppetlabs-products, option: enabled, value: 1 }
    - { repo: puppetlabs, section: puppetlabs-deps, option: enabled, value: 1 }
  when: product.name == "rdo"

- name: Install Ruby SCL
  template: src=ruby-scl.repo.j2 dest=/etc/yum.repos.d/ruby-scl.repo owner=root group=root mode=644

- name: Install openstack-foreman-installer rpm
  yum: name={{ openstack_foreman_installer_rpm }} state=present
  retries: 3
  delay: 30
  register: ofi_result
  until: ofi_result.rc == 0
  when: job.use_astapor is defined and not job.use_astapor|bool

- include: openstack-puppet-modules-src.yml
  when: use_opm_src is defined and use_opm_src

- include: astapor.yml
  when: job.use_astapor is defined and job.use_astapor|bool

- name: Make /etc/hosts proper
  lineinfile: "dest=/etc/hosts regexp='.*{{hostvars[item].fqdn }}$' line='{{ hostvars[item].ansible_eth1.ipv4.address }} {{ hostvars[item].fqdn }}' state=present"
  with_items: groups.foreman

- name: Deactivate iptables
  service: name=iptables enabled=no state=stopped
  tags:
    - iptables
  when: ansible_distribution == 'RedHat' and ansible_distribution_version | version_compare('7.0', '<')

- name: Make passwords the same for foreman environment
  replace: >
    dest={{ job.astapor_dest }}/bin/seeds.rb
    regexp='SecureRandom\.hex'
    replace='"redhat"'

- name: Fix seed values
  lineinfile: >
    dest={{ job.astapor_dest }}/bin/seeds.rb
    regexp="^(.*\"{{ item.name }}\"[ ]*=> )([\"']){{ item.oldvalue }}([\"']),"
    line="\1\g<2>{{ item.newvalue }}\g<3>,"
    backrefs=yes
    state=present
  with_items: foreman.seed_values

- name: Remove the prompt in foreman_server.sh
  lineinfile: >
    dest={{ job.astapor_dest }}/bin/foreman_server.sh
    regexp='^read .*'
    state=absent

- name: Remove 'include passenger' line from foreman_server.sh
  lineinfile: >
    dest={{ job.astapor_dest }}/bin/foreman_server.sh
    regexp='^include passenger'
    state=absent

- name: Run the installer
  shell: >
    chdir={{ job.astapor_dest }}/bin
    creates=/tmp/foreman_client.sh
    bash -x ./foreman_server.sh
  register: installer_run
  environment:
    FOREMAN_GATEWAY: "false"
    FOREMAN_PROVISIONING: "false"
  tags:
    - foreman_install

- name: Installer stdout
  debug: var=installer_run.stdout_lines

- name: Fetch the client installer
  fetch: src=/tmp/foreman_client.sh dest=/tmp/foreman
  tags:
    - fetch_client_script

- name: reset and fetch password
  command: foreman-rake permissions:reset
  register: foreman_password_reset

- name: parse password from credentials
  shell:  'sed -E "s/Reset to user:[ ]?+admin, password:[ ]?+(.*)/\1/" <<< "{{ foreman_password_reset.stdout }}"'
  register: foreman_parse_password

- name: set foreman admin password as fact
  set_fact: foreman_admin_password={{foreman_parse_password.stdout }}

