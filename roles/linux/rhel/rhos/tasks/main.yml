---
# Plese remove this workaround after modifying
# base vagrant box to get rid of rhel.repo
- name: get rid of any existing rhel.repo in broken vagrant box.
  file: path=/etc/yum.repos.d/rhel.repo state=absent
  when: installer.name == 'staypuft'

- name: Create the RHOS Release Repository
  template: src=rhos-release.repo.j2 dest=/etc/yum.repos.d/rhos-release.repo

- name: install rhos-release
  yum: name=rhos-release state=latest

- name: Execute rhos-release {{ product.version|int }}
  command: rhos-release {{ product.version|int }}
  notify:
    - Yum clean all
    - yum -y update to latest packages

- name: Change server location for repos in  rhos-release
  replace:
    dest=/etc/yum.repos.d/rhos-release-{{product.version|int}}-rhel-{{ ansible_distribution_version|string}}.repo
    regexp={{ location.defaultrepo_string }}
    replace={{ location.map[user_location] }}
  when: user_location is defined

- name: Change puddle version for repos in rhos-release
  replace:
    dest=/etc/yum.repos.d/rhos-release-{{product.version|int}}-rhel-{{ ansible_distribution_version|string}}.repo
    regexp=/latest/RH{{ ansible_distribution_major_version|string }}
    replace=/{{ product.repo.puddle_pin_version }}/RH{{ ansible_distribution_major_version|string }}
  when: (product.repo.puddle_pin_version is defined and product.repo.puddle_pin_version != 'latest' and product.repo_type == 'puddle')

- name: Change Foreman version for repos in rhos-release
  replace:
    dest=/etc/yum.repos.d/rhos-release-{{product.version|int}}-rhel-{{ ansible_distribution_version|string }}.repo
    regexp=/Foreman/latest/
    replace=/Foreman/{{ product.repo.foreman_pin_version }}/
  when: (product.repo.foreman_pin_version is defined and product.repo.foreman_pin_version != 'latest')

- name: ensure yum-utils
  yum: name=yum-utils state=present

- name: Disable default foreman puddle rhelosp repo when using poodle
  shell: /usr/bin/yum-config-manager --disable 'rhelosp-*-OS-Foreman'
  when: product.repo_type == 'poodle'

# new advanced repos
- name: Create the RHOS Advanced repository
  shell: "rhos-release  -x {{ product.version|int }};  rhos-release {{ product.version|int }}a"
  when: product.repo_type == 'advanced'

# poodle repos
- name: Create the RHOS poodle repository
  shell: "rhos-release  -x {{ product.version|int }};  rhos-release  -d {{ product.version|int }}"
  when: product.repo_type == 'poodle'

- name: Create the RHOS Advanced  poodle repository
  shell: "rhos-release  -x {{ product.version|int }};  rhos-release  -d {{ product.version|int }}a"
  when: product.repo_type == 'poodle_advanced'

- name: Create the RHOS Foreman poodle repository (disabled)
  template: src=foreman-poodle.repo.j2 dest=/etc/yum.repos.d/foreman-poodle.repo
  when: (product.repo_type == 'poodle' and installer.name == 'staypuft')

- name: Enable Foreman poodle repository if this is a poodle
  ini_file: dest=/etc/yum.repos.d/foreman-poodle.repo
            section=foreman-poodle
            option=enabled
            value=1
  when: product.repo_type == 'poodle' and installer.name == 'staypuft'

- name: Change poodle version for repos in rhos-release
  replace:
    dest=/etc/yum.repos.d/rhos-poodle.repo
    regexp=/latest/RHOS
    replace=/{{ product.repo.poodle_pin_version }}/RHOS
  when: (product.repo.poodle_pin_version is defined and product.repo.poodle_pin_version != 'latest' and product.repo_type == 'poodle')

- name: Change Foreman poodle version for repos in rhos-release
  replace:
    dest=/etc/yum.repos.d/foreman-poodle.repo
    regexp=/latest/Foreman
    replace=/{{ product.repo.foreman_poodle_pin_version }}/Foreman
  when: (product.repo.poodle_pin_version is defined and product.repo.poodle_pin_version != 'latest'  and product.repo_type == 'poodle')

- name: Ensure common dependencies
  yum: name={{ item }} state=present
  with_items:
    - libselinux-python

