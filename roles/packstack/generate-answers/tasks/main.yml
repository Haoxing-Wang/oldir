---
- debug: var=packstack.answer_file
  when: job.verbosity <= verbosity.debug

- debug: var=hostvars[inventory_hostname]
  when: job.verbosity <= verbosity.debug

- name: validate that controller host can be calculated
  template: src=controller_host.j2 dest=/tmp/controller_host.txt
  when: nodes.controller is defined

- name: remove tmp files from validation
  file: path=/tmp/controller_host.txt state=absent
  when: nodes.controller is defined

- name: find controller host and store in a var
  set_fact:
    tmp_controller_host: "{{ lookup('template', '../templates/controller_host.j2') | replace('\n', '') }}"
  when: nodes.controller is defined

- name: print controller host
  debug: var=tmp_controller_host
  when: job.verbosity <= verbosity.info and nodes.controller is defined

- name: set CONFIG_CONTROLLER_HOST to packstack answer-file
  replace:
      dest={{ packstack.answer_file }}
      regexp='^(CONFIG_.*?_HOST)=.*$'
      replace='\1={{tmp_controller_host}}'
      backup=yes
  when: nodes.controller is defined

- name: warn if CONFIG_CONTROLLER_HOST is overridden in packstack config"
  debug: msg="'WARNING:' CONFIG_CONTROLLER_HOST overridden by packstack config"
  when: "'CONFIG_CONTROLLER_HOST' in packstack.config
           and job.verbosity <= verbosity.warning
           and nodes.controller is defined"

- name: validate that compute hosts can be calculated
  template: src=compute_host.j2 dest=/tmp/compute_hosts.txt

- name: remove tmp files from validation
  file: path=/tmp/compute_hosts.txt state=absent

- name: find compute hosts and store in a var
  set_fact:
    tmp_compute_hosts: "{{ lookup('template', '../templates/compute_host.j2') | replace('\n', '') }}"

- name: print compute hosts
  debug: var=tmp_compute_hosts
  when: job.verbosity <= verbosity.info

- name: set CONFIG_COMPUTE_HOSTS to packstack answer-file
  lineinfile:
      dest={{ packstack.answer_file }}
      regexp='CONFIG_((NOVA_)?)COMPUTE_HOSTS=.*'
      line='CONFIG_\1COMPUTE_HOSTS={{tmp_compute_hosts}}'
      backrefs=yes

- name: warn if CONFIG_COMPUTE_HOSTS is overridden in packstack config"
  debug: msg="'WARNING:' CONFIG_COMPUTE_HOSTS overridden by packstack config"
  when: "'CONFIG_COMPUTE_HOSTS' in packstack.config
           and job.verbosity <= verbosity.warning"

- name: validate that network hosts can be calculated
  template: src=network_host.j2 dest=/tmp/network_host.txt
  when: nodes.network is defined

- name: remove tmp files from validation
  file: path=/tmp/network_host.txt state=absent
  when: nodes.network is defined

- name: find compute hosts and store in a var
  set_fact:
    tmp_network_hosts: "{{ lookup('template', '../templates/network_host.j2') | replace('\n', '') }}"
  when: nodes.network is defined

- name: print network hosts
  debug: var=tmp_network_hosts
  when: job.verbosity <= verbosity.info and nodes.network is defined

- name: set CONFIG_NETWORK_HOSTS to packstack answer-file
  lineinfile:
      dest={{ packstack.answer_file }}
      regexp='CONFIG_NETWORK_HOSTS=.*'
      line='CONFIG_NETWORK_HOSTS={{tmp_network_hosts}}'
  when: nodes.network is defined

- name: warn if CONFIG_NETWORK_HOSTS is overridden in packstack config"
  debug: msg="'WARNING:' CONFIG_NETWORK_HOSTS overridden by packstack config"
  when: "'CONFIG_NETWORK_HOSTS' in packstack.config
           and job.verbosity <= verbosity.warning
           and nodes.network is defined"

- name: set CONFIG_NEUTRON_LBAAS_HOSTS to packstack answer-file
  lineinfile:
      dest={{ packstack.answer_file }}
      insertafter=EOF
      line='CONFIG_NEUTRON_LBAAS_HOSTS={{tmp_network_hosts}}'
  when: nodes.network is defined

- name: create packstack answer-file from the config
  lineinfile:
      dest={{ packstack.answer_file }}
      regexp='{{ item.key }}=.*'
      line='{{ item.key }}={{ item.value }}'
  with_dict: packstack.config

