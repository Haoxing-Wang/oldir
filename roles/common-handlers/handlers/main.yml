---
- name: reboot
  shell: logger -p local3.info -s "ANSIBLE REBOOT" && /sbin/shutdown -r {{ reboot_delay }} {{ reboot_options }}

- name: Wait for host to stop
  sudo: no
  local_action:
        wait_for host={{ hostvars[inventory_hostname].ansible_ssh_host }}
                 port=22 state=stopped delay=5 timeout=300
  register: host_stopped
  changed_when: True
  failed_when: False
  notify:
    - Check instance uptime
    - Print instance uptime
    - Grep for reboot
    - Print grep for reboot
    - Fail if not actually stopped

- name: print host stopped register
  debug: var=host_stopped

- name: Wait for host to come back
  sudo: no
  local_action:
        wait_for host={{ hostvars[inventory_hostname].ansible_ssh_host }}
                 port=22 state=started delay=10 timeout=600

- name: Wait after ssh service is back
  pause: seconds=60

- name: Check instance uptime
  command: uptime
  register: uptime

- name: Print instance uptime
  debug: var=uptime.stdout_lines

- name: Grep for reboot
  command: grep 'ANSIBLE REBOOT' -A 5 -B 2 /var/log/messages
  register: reboot_grep

- name: Print grep for reboot
  debug: var=reboot_grep.stdout_lines

- name: Fail if not actually stopped
  sudo: no
  fail: msg="Host not actually shut down"
  when:
    - "'Timeout' in host_stopped.msg and host_stopped.msg is defined"

- name: Reload facts
  action: setup

- name: Yum clean all
  command: yum clean all

- name: Yum repolist
  command: yum repolist
  ignore_errors: yes


- name: yum -y update to latest packages
  yum: name=* state=latest
  notify:
    - reboot
    - Wait for host to stop
    - Wait for host to come back
    - Check instance uptime
    - Print instance uptime
    - Reload facts
  when: yum_update | bool

- name: restart network
  service: name=network state=restarted
  notify:
    - Reload facts
