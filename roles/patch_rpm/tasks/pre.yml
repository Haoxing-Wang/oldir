- name: Clone upstream
  git: repo="{{ patch.upstream.url }}"
       dest="{{ tmp_dir }}/dist-git/{{ patch.upstream.name }}"
       accept_hostkey=true
  when: patch.upstream is defined

- name: Clone patch
  git: repo="{{ patch.gerrit.url }}"
       version="{{ patch.gerrit.branch }}"
       dest="{{ tmp_dir }}/dist-git/{{ patch.gerrit.name }}"
       accept_hostkey=true

- name: Setup patch branch
  shell: >
      cd {{ tmp_dir }}/dist-git/{{ patch.gerrit.name }};
      git fetch {{ patch.gerrit.url }} {{ patch.gerrit.refspec}} && git checkout FETCH_HEAD -b gerrit-patch

- name: Clone director dist-git
  git: repo="{{ patch.dist_git.url }}"
       version="{{ product.name }}-{{ product.version.major }}.{{ product.version.minor }}-pmgr-rhel-{{ distro.major }}"
       dest="{{ tmp_dir }}/dist-git/{{ patch.dist_git.name }}"
       accept_hostkey=true
  when: patch.dist_git.use_director is defined and patch.dist_git.use_director
  # this is due to this rule of building:
  # the directive is always use pmgr if it exists. Only exception to that is python-tuskarclient

- name: Clone dist-git
  git: repo="{{ patch.dist_git.url }}"
       version="{{ product.name }}-{{ product.version.major }}.{{ product.version.minor }}-rhel-{{ distro.major }}"
       dest="{{ tmp_dir }}/dist-git/{{ patch.dist_git.name }}"
       accept_hostkey=true
  when: patch.dist_git.use_director is not defined or not patch.dist_git.use_director

- name: Setup git configurations
  shell: >
      if [ "{{ patch.upstream is defined }}" == "True" ]; then
          git remote add -f upstream {{ tmp_dir }}/dist-git/{{ patch.upstream is defined and patch.upstream.name }};
          git fetch upstream;
      fi;
      git remote add -f patches {{ tmp_dir }}/dist-git/{{ patch.gerrit.name }};
      git fetch patches;
      git branch {{ product.name }}-{{ product.version.major }}.{{ product.version.minor }}-patches patches/gerrit-patch
  args:
    chdir: "{{ tmp_dir }}/dist-git/{{ patch.dist_git.name }}"

