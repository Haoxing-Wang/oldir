---
- set_fact: instack_user_home="/home/stack"

- name: set node type to scale
  set_fact: node_to_scale={{item}}
  when: nodes.{{item}}.scale_change is defined
  with_items:
    - compute
    - cephstorage
    - blockstorage
    - swiftstorage

- name: setup vars
  template: src=scale-setup-env.j2 dest=~/scale-setup-env mode=0755
  when: node_to_scale is defined

- name: scale overcloud nodes
  shell: >
    source {{ instack_user_home }}/stackrc;
    source {{ instack_user_home }}/scale-setup-env;
    openstack overcloud scale stack overcloud overcloud -r $NODE_TO_SCALE_PLAN_TYPE -n $NODE_SCALE_CHANGE
  when: node_to_scale is defined

- name: poll for heat stack-list to go to COMPLETE
  shell: >
    source {{ instack_user_home }}/stackrc;
    heat stack-list
  register: heat_stack_list_result
  until: heat_stack_list_result.stdout.find("COMPLETE") != -1
  retries: 10
  delay: 180
  when: node_to_scale is defined

- name: get the number of nodes
  shell: >
    source {{ instack_user_home }}/stackrc;
    source {{ instack_user_home }}/scale-setup-env;
    nova list | grep $NODE_TO_SCALE_TYPE | cut -f2- -d':' | wc -l
  register: nova_list_output
  when: node_to_scale is defined

- name: get value for scale_change
  shell: >
    source {{ instack_user_home }}/stackrc;
    source {{ instack_user_home }}/scale-setup-env;
    echo $NODE_SCALE_CHANGE
  register: scale_change_value
  when: node_to_scale is defined

- name: check the number of nodes match the scaled values
  fail: msg="Overcloud nodes were not scaled correctly."
  when: (node_to_scale is defined) and (scale_change_value.stdout != nova_list_output.stdout)

- name: get nova service-list for compute nodes
  shell: >
    source {{ instack_user_home }}/overcloudrc;
    source {{ instack_user_home }}/scale-setup-env;
    nova service-list | grep nova-compute | cut -f2- -d':' | wc -l
  register: nova_service_compute
  when: node_to_scale is defined and node_to_scale == 'compute'

- name: check the service list matches the number of compute nodes
  fail: msg="Overcloud nova list does not show expected number of compute services"
  when: (node_to_scale is defined) and node_to_scale == 'compute' and nova_service_compute.stdout != scale_change_value.stdout

- name: get ceph status for ceph nodes
  shell: >
    source {{ instack_user_home }}/overcloudrc;
    ceph -s
  register: ceph_s
  when: node_to_scale is defined and node_to_scale == 'cephstorage'

