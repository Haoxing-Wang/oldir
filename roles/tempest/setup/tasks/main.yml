---
- name: verify if setup method {{tempest.setup_method }} is valid
  fail: msg="setup method provided '{{ tempest.setup_method }}'
            is invalid. Valid ones  '{{ tempest_valid_setup_methods|join(', ') }}' "
  when: not tempest.setup_method
        or not tempest.setup_method in tempest_valid_setup_methods
  tags: tempest_setup

- { include: setup-tempest.yml,
        when: "tempest.setup_method == 'packstack/provision'",
        tags: ['tempest_setup']}

- { include: setup-tempest-use-config-tool.yml,
        when: "tempest.setup_method == 'tempest/config_script'",
        tags: ['tempest_setup']}

- { include: setup-tempest-use-rpm.yml,  #"
        tempest_rpm_repo: "{{ tempest.repo[ansible_distribution][ansible_distribution_version] }}",
        when: "tempest.setup_method == 'tempest/rpm'",
        tags: ['tempest_setup'] }

- name: pip install junitxml, unittest2, testtools
  pip: name={{ item }} virtualenv={{ tempest.dir }}/.venv
  with_items:
    - junitxml
    - unittest2
    - nose
  when: tempest.use_virtual_env | default(true)
  tags:
    - tempest_setup

- name: pip install testtools, specific version
  pip: name={{ item.name }} version={{ item.version }}
       virtualenv={{ tempest.dir }}/.venv
  with_items:
    - { name: testtools, version: '0.9.34' }
    - { name: python-subunit, version: '0.0.15'}
  when: tempest.use_virtual_env | default(true)
  tags:
    - tempest_setup

- name: pip install requirements
  pip: requirements={{ tempest.dir }}/requirements.txt
       virtualenv={{ tempest.dir }}/.venv
  when: tempest.use_virtual_env | default(true)
  tags:
    - tempest_setup
