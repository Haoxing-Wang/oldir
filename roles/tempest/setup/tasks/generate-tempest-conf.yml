-  name: generate-tempest-conf
   debug: msg="generate-tempest-conf"

- name: get cirros image id
  shell: "source ~/keystonerc_admin; glance image-list | grep cirros | awk '{print $2}' | head -n 1"
  register: cirros_id

- name: print out cirros_id
  debug: var=cirros_id.stdout

- name: get openstack admin password
  shell: "source ~/keystonerc_admin; echo $OS_PASSWORD"
  register: tempest_admin_password

- name: print openstack admin password
  debug: var=tempest_admin_password.stdout

- name: set generate command for HA topology
  set_fact:
    tempest_config_generate_command: >
      python {{ tempest.dir }}/tools/config_tempest.py --out {{ tempest.dir }}/etc/tempest.conf
            --debug  --create
            identity.uri http://{{ hostvars['localhost'].virtual_ips.keystone_public }}:5000/v2.0/
            compute.allow_tenant_isolation true
            object-storage.operator_role SwiftOperator
            identity.admin_password "{{ hostvars['localhost'].deployment_admin_password | default('redhat') }}"
            identity.password "{{ hostvars['localhost'].deployment_demo_password | default('secrete') }}"
            compute.image_ref "{{ cirros_id.stdout }}"
            compute.image_ref_alt "{{ cirros_id.stdout }}"
            compute.build_timeout 500
            compute.image_ssh_user cirros
            compute.ssh_user cirros
            network.build_timeout 500
            volume.build_timeout 500
            scenario.ssh_user cirros
            scenario.img_dir ..
  when: job.ha_configuration | default(false)

- name: config_tempest |  generating tempest.conf by running
  debug: msg="'Running:' {{ tempest_config_generate_command }}"
  tags:
    - tempest_setup_rpm
    - tempest_setup_gen_conf

- name: config_tempest |  generate tempest.conf
  command: "{{ tempest_config_generate_command }}
           chdir={{ tempest.dir }}"
  register: result
  tags:
    - tempest_setup_rpm
    - tempest_setup_gen_conf

- name: config_tempest | Output of generate command
  debug: var=result.stdout_lines
  tags:
    - tempest_setup_rpm
    - tempest_setup_gen_conf

- debug: var=result.stderr_lines
  tags:
    - tempest_setup_rpm
    - tempest_setup_gen_conf

- name: Set arbitrary things in tempest.conf
  ini_file: dest={{ tempest.dir }}/etc/tempest.conf
            section={{ item.section }}
            option={{ item.option }}
            value={{ item.value }}
  with_items:
    tester.configuration.additional_default_settings
